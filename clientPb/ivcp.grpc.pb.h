// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ivcp.proto
#ifndef GRPC_ivcp_2eproto__INCLUDED
#define GRPC_ivcp_2eproto__INCLUDED

#include "ivcp.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ivc {

class ivcp final {
 public:
  static constexpr char const* service_full_name() {
    return "ivc.ivcp";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 设备获取区域服务器地址
    virtual ::grpc::Status IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpGetSvrIpMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpGetSvrIpMsgRaw(context, request, cq));
    }
    // 设备登录
    virtual ::grpc::Status IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRegisterMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRegisterMsgRaw(context, request, cq));
    }
    // 设备退出登录
    virtual ::grpc::Status IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpUnRegisterMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpUnRegisterMsgRaw(context, request, cq));
    }
    // 设备保活
    virtual ::grpc::Status IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpKeepAliveMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpKeepAliveMsgRaw(context, request, cq));
    }
    // 设备获取新的cos授权
    virtual ::grpc::Status IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpGetNewSecMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpGetNewSecMsgRaw(context, request, cq));
    }
    // 设备上传图片元数据
    virtual ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpUploadImageMedaDataMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpUploadImageMedaDataMsgRaw(context, request, cq));
    }
    // 设备上传短视频元数据
    virtual ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpUploadVideoSliceMetaDataMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpUploadVideoSliceMetaDataMsgRaw(context, request, cq));
    }
    // 设备上报Nat数据
    virtual ::grpc::Status IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpReportNatInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpReportNatInfoMsgRaw(context, request, cq));
    }
    // *****************************设备被动******************************
    //
    // 设备返回查询基本信息
    virtual ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspDeviceBaseInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceBaseInfoMsgRaw(context, request, cq));
    }
    // 设备返回查询通道信息
    virtual ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspDeviceChannelInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceChannelInfoMsgRaw(context, request, cq));
    }
    // 设备返回查询视频信息
    virtual ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspDeviceVideoInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceVideoInfoMsgRaw(context, request, cq));
    }
    // 设备返回查询录像信息
    virtual ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspDeviceRecordInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceRecordInfoMsgRaw(context, request, cq));
    }
    // 设备返回修改基本信息
    virtual ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceBaseInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceBaseInfoMsgRaw(context, request, cq));
    }
    // 设备返回修改视频信息
    virtual ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceVideoInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceVideoInfoMsgRaw(context, request, cq));
    }
    // 设备返回修改录像信息
    virtual ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceRecordInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceRecordInfoMsgRaw(context, request, cq));
    }
    // 设备返回视频上云请求
    virtual ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspPullStreamToCloudMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspPullStreamToCloudMsgRaw(context, request, cq));
    }
    // 设备返回视频上cos请求
    virtual ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspPullStreamToCosMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspPullStreamToCosMsgRaw(context, request, cq));
    }
    // 设备返回查询固件新版本详情
    virtual ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspGetVersionInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspGetVersionInfoMsgRaw(context, request, cq));
    }
    // 设备返回固件升级请求
    virtual ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> AsyncIvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(AsyncIvcpRspUpdateVersionInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>> PrepareAsyncIvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>>(PrepareAsyncIvcpRspUpdateVersionInfoMsgRaw(context, request, cq));
    }
    // *****************************双向流******************************
    //
    // 设备打通服务器主动推送通道
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ivc::StreamResData>> IvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ivc::StreamResData>>(IvcpPollingMsgRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>> AsyncIvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>>(AsyncIvcpPollingMsgRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>> PrepareAsyncIvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>>(PrepareAsyncIvcpPollingMsgRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 设备获取区域服务器地址
      virtual void IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备登录
      virtual void IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备退出登录
      virtual void IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备保活
      virtual void IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备获取新的cos授权
      virtual void IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备上传图片元数据
      virtual void IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备上传短视频元数据
      virtual void IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备上报Nat数据
      virtual void IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // *****************************设备被动******************************
      //
      // 设备返回查询基本信息
      virtual void IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回查询通道信息
      virtual void IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回查询视频信息
      virtual void IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回查询录像信息
      virtual void IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回修改基本信息
      virtual void IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回修改视频信息
      virtual void IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回修改录像信息
      virtual void IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回视频上云请求
      virtual void IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回视频上cos请求
      virtual void IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回查询固件新版本详情
      virtual void IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设备返回固件升级请求
      virtual void IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // *****************************双向流******************************
      //
      // 设备打通服务器主动推送通道
      virtual void IvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData* request, ::grpc::ClientReadReactor< ::ivc::StreamResData>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpGetSvrIpMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpGetSvrIpMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpUnRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpUnRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpKeepAliveMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpKeepAliveMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpGetNewSecMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpGetNewSecMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpUploadImageMedaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpUploadImageMedaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpUploadVideoSliceMetaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpUploadVideoSliceMetaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpReportNatInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpReportNatInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspDeviceChannelInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceChannelInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspPullStreamToCloudMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspPullStreamToCloudMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspPullStreamToCosMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspPullStreamToCosMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspGetVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspGetVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* AsyncIvcpRspUpdateVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ivc::RpcResData>* PrepareAsyncIvcpRspUpdateVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ivc::StreamResData>* IvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>* AsyncIvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ivc::StreamResData>* PrepareAsyncIvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpGetSvrIpMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpGetSvrIpMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRegisterMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRegisterMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpUnRegisterMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpUnRegisterMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpKeepAliveMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpKeepAliveMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpGetNewSecMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpGetNewSecMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpUploadImageMedaDataMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpUploadImageMedaDataMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpUploadVideoSliceMetaDataMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpUploadVideoSliceMetaDataMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpReportNatInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpReportNatInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspDeviceBaseInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceBaseInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspDeviceChannelInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceChannelInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspDeviceVideoInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceVideoInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspDeviceRecordInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspDeviceRecordInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceBaseInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceBaseInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceVideoInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceVideoInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspModifyDeviceRecordInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspModifyDeviceRecordInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspPullStreamToCloudMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspPullStreamToCloudMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspPullStreamToCosMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspPullStreamToCosMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspGetVersionInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspGetVersionInfoMsgRaw(context, request, cq));
    }
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::ivc::RpcResData* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> AsyncIvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(AsyncIvcpRspUpdateVersionInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>> PrepareAsyncIvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>>(PrepareAsyncIvcpRspUpdateVersionInfoMsgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ivc::StreamResData>> IvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ivc::StreamResData>>(IvcpPollingMsgRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ivc::StreamResData>> AsyncIvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ivc::StreamResData>>(AsyncIvcpPollingMsgRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ivc::StreamResData>> PrepareAsyncIvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ivc::StreamResData>>(PrepareAsyncIvcpPollingMsgRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpGetSvrIpMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpUnRegisterMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpKeepAliveMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpGetNewSecMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpUploadImageMedaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpUploadVideoSliceMetaDataMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpReportNatInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspDeviceChannelInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspModifyDeviceBaseInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspModifyDeviceVideoInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspModifyDeviceRecordInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspPullStreamToCloudMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspPullStreamToCosMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspGetVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, std::function<void(::grpc::Status)>) override;
      void IvcpRspUpdateVersionInfoMsg(::grpc::ClientContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IvcpPollingMsg(::grpc::ClientContext* context, const ::ivc::StreamReqData* request, ::grpc::ClientReadReactor< ::ivc::StreamResData>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpGetSvrIpMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpGetSvrIpMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpUnRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpUnRegisterMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpKeepAliveMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpKeepAliveMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpGetNewSecMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpGetNewSecMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpUploadImageMedaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpUploadImageMedaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpUploadVideoSliceMetaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpUploadVideoSliceMetaDataMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpReportNatInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpReportNatInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspDeviceChannelInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceChannelInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceBaseInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceVideoInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspModifyDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspModifyDeviceRecordInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspPullStreamToCloudMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspPullStreamToCloudMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspPullStreamToCosMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspPullStreamToCosMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspGetVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspGetVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* AsyncIvcpRspUpdateVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ivc::RpcResData>* PrepareAsyncIvcpRspUpdateVersionInfoMsgRaw(::grpc::ClientContext* context, const ::ivc::RpcReqData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ivc::StreamResData>* IvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request) override;
    ::grpc::ClientAsyncReader< ::ivc::StreamResData>* AsyncIvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ivc::StreamResData>* PrepareAsyncIvcpPollingMsgRaw(::grpc::ClientContext* context, const ::ivc::StreamReqData& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpGetSvrIpMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRegisterMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpUnRegisterMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpKeepAliveMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpGetNewSecMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpUploadImageMedaDataMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpUploadVideoSliceMetaDataMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpReportNatInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspDeviceBaseInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspDeviceChannelInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspDeviceVideoInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspDeviceRecordInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspModifyDeviceBaseInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspModifyDeviceVideoInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspModifyDeviceRecordInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspPullStreamToCloudMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspPullStreamToCosMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspGetVersionInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpRspUpdateVersionInfoMsg_;
    const ::grpc::internal::RpcMethod rpcmethod_IvcpPollingMsg_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 设备获取区域服务器地址
    virtual ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备登录
    virtual ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备退出登录
    virtual ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备保活
    virtual ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备获取新的cos授权
    virtual ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备上传图片元数据
    virtual ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备上传短视频元数据
    virtual ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备上报Nat数据
    virtual ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // *****************************设备被动******************************
    //
    // 设备返回查询基本信息
    virtual ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回查询通道信息
    virtual ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回查询视频信息
    virtual ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回查询录像信息
    virtual ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回修改基本信息
    virtual ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回修改视频信息
    virtual ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回修改录像信息
    virtual ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回视频上云请求
    virtual ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回视频上cos请求
    virtual ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回查询固件新版本详情
    virtual ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // 设备返回固件升级请求
    virtual ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response);
    // *****************************双向流******************************
    //
    // 设备打通服务器主动推送通道
    virtual ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* context, const ::ivc::StreamReqData* request, ::grpc::ServerWriter< ::ivc::StreamResData>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpGetSvrIpMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRegisterMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUnRegisterMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpKeepAliveMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpGetNewSecMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUploadImageMedaDataMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpReportNatInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspPullStreamToCloudMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspPullStreamToCosMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspGetVersionInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* context, ::ivc::RpcReqData* request, ::grpc::ServerAsyncResponseWriter< ::ivc::RpcResData>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpPollingMsg(::grpc::ServerContext* context, ::ivc::StreamReqData* request, ::grpc::ServerAsyncWriter< ::ivc::StreamResData>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(19, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_IvcpGetSvrIpMsg<WithAsyncMethod_IvcpRegisterMsg<WithAsyncMethod_IvcpUnRegisterMsg<WithAsyncMethod_IvcpKeepAliveMsg<WithAsyncMethod_IvcpGetNewSecMsg<WithAsyncMethod_IvcpUploadImageMedaDataMsg<WithAsyncMethod_IvcpUploadVideoSliceMetaDataMsg<WithAsyncMethod_IvcpReportNatInfoMsg<WithAsyncMethod_IvcpRspDeviceBaseInfoMsg<WithAsyncMethod_IvcpRspDeviceChannelInfoMsg<WithAsyncMethod_IvcpRspDeviceVideoInfoMsg<WithAsyncMethod_IvcpRspDeviceRecordInfoMsg<WithAsyncMethod_IvcpRspModifyDeviceBaseInfoMsg<WithAsyncMethod_IvcpRspModifyDeviceVideoInfoMsg<WithAsyncMethod_IvcpRspModifyDeviceRecordInfoMsg<WithAsyncMethod_IvcpRspPullStreamToCloudMsg<WithAsyncMethod_IvcpRspPullStreamToCosMsg<WithAsyncMethod_IvcpRspGetVersionInfoMsg<WithAsyncMethod_IvcpRspUpdateVersionInfoMsg<WithAsyncMethod_IvcpPollingMsg<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpGetSvrIpMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpGetSvrIpMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpGetSvrIpMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRegisterMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRegisterMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRegisterMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpUnRegisterMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpUnRegisterMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUnRegisterMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpKeepAliveMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpKeepAliveMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpKeepAliveMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpGetNewSecMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpGetNewSecMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpGetNewSecMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpUploadImageMedaDataMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpUploadImageMedaDataMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUploadImageMedaDataMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpUploadVideoSliceMetaDataMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpUploadVideoSliceMetaDataMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUploadVideoSliceMetaDataMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpReportNatInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpReportNatInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpReportNatInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspDeviceBaseInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspDeviceBaseInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceBaseInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspDeviceChannelInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspDeviceChannelInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceChannelInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspDeviceVideoInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspDeviceVideoInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceVideoInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspDeviceRecordInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspDeviceRecordInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceRecordInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspModifyDeviceBaseInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspModifyDeviceBaseInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceBaseInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspModifyDeviceVideoInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspModifyDeviceVideoInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceVideoInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspModifyDeviceRecordInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspModifyDeviceRecordInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceRecordInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspPullStreamToCloudMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspPullStreamToCloudMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspPullStreamToCloudMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspPullStreamToCosMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspPullStreamToCosMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspPullStreamToCosMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspGetVersionInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspGetVersionInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspGetVersionInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::RpcReqData* request, ::ivc::RpcResData* response) { return this->IvcpRspUpdateVersionInfoMsg(context, request, response); }));}
    void SetMessageAllocatorFor_IvcpRspUpdateVersionInfoMsg(
        ::grpc::MessageAllocator< ::ivc::RpcReqData, ::ivc::RpcResData>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ivc::RpcReqData, ::ivc::RpcResData>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspUpdateVersionInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackServerStreamingHandler< ::ivc::StreamReqData, ::ivc::StreamResData>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ivc::StreamReqData* request) { return this->IvcpPollingMsg(context, request); }));
    }
    ~WithCallbackMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ivc::StreamResData>* IvcpPollingMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_IvcpGetSvrIpMsg<WithCallbackMethod_IvcpRegisterMsg<WithCallbackMethod_IvcpUnRegisterMsg<WithCallbackMethod_IvcpKeepAliveMsg<WithCallbackMethod_IvcpGetNewSecMsg<WithCallbackMethod_IvcpUploadImageMedaDataMsg<WithCallbackMethod_IvcpUploadVideoSliceMetaDataMsg<WithCallbackMethod_IvcpReportNatInfoMsg<WithCallbackMethod_IvcpRspDeviceBaseInfoMsg<WithCallbackMethod_IvcpRspDeviceChannelInfoMsg<WithCallbackMethod_IvcpRspDeviceVideoInfoMsg<WithCallbackMethod_IvcpRspDeviceRecordInfoMsg<WithCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg<WithCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg<WithCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg<WithCallbackMethod_IvcpRspPullStreamToCloudMsg<WithCallbackMethod_IvcpRspPullStreamToCosMsg<WithCallbackMethod_IvcpRspGetVersionInfoMsg<WithCallbackMethod_IvcpRspUpdateVersionInfoMsg<WithCallbackMethod_IvcpPollingMsg<Service > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpGetSvrIpMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRegisterMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUnRegisterMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpKeepAliveMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpGetNewSecMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUploadImageMedaDataMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpReportNatInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspPullStreamToCloudMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspPullStreamToCosMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspGetVersionInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIvcpPollingMsg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(19, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpGetSvrIpMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpGetSvrIpMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRegisterMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRegisterMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpUnRegisterMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUnRegisterMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpKeepAliveMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpKeepAliveMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpGetNewSecMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpGetNewSecMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpUploadImageMedaDataMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUploadImageMedaDataMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpUploadVideoSliceMetaDataMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpUploadVideoSliceMetaDataMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpReportNatInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpReportNatInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspDeviceBaseInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceBaseInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspDeviceChannelInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceChannelInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspDeviceVideoInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceVideoInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspDeviceRecordInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspDeviceRecordInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspModifyDeviceBaseInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceBaseInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspModifyDeviceVideoInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceVideoInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspModifyDeviceRecordInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspModifyDeviceRecordInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspPullStreamToCloudMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspPullStreamToCloudMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspPullStreamToCosMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspPullStreamToCosMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspGetVersionInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspGetVersionInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IvcpRspUpdateVersionInfoMsg(context, request, response); }));
    }
    ~WithRawCallbackMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IvcpRspUpdateVersionInfoMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->IvcpPollingMsg(context, request); }));
    }
    ~WithRawCallbackMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* IvcpPollingMsg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpGetSvrIpMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpGetSvrIpMsg() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpGetSvrIpMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpGetSvrIpMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpGetSvrIpMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpGetSvrIpMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRegisterMsg() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRegisterMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRegisterMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpUnRegisterMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpUnRegisterMsg() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpUnRegisterMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpUnRegisterMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpUnRegisterMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpUnRegisterMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpKeepAliveMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpKeepAliveMsg() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpKeepAliveMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpKeepAliveMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpKeepAliveMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpKeepAliveMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpGetNewSecMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpGetNewSecMsg() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpGetNewSecMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpGetNewSecMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpGetNewSecMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpGetNewSecMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpUploadImageMedaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpUploadImageMedaDataMsg() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpUploadImageMedaDataMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpUploadImageMedaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpUploadImageMedaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpUploadImageMedaDataMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpUploadVideoSliceMetaDataMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpUploadVideoSliceMetaDataMsg() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpUploadVideoSliceMetaDataMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpUploadVideoSliceMetaDataMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpUploadVideoSliceMetaDataMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpReportNatInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpReportNatInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpReportNatInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpReportNatInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpReportNatInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpReportNatInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspDeviceBaseInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspDeviceBaseInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspDeviceChannelInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspDeviceChannelInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspDeviceChannelInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspDeviceChannelInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspDeviceChannelInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspDeviceVideoInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspDeviceVideoInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspDeviceRecordInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspDeviceRecordInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspModifyDeviceBaseInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspModifyDeviceBaseInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspModifyDeviceBaseInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspModifyDeviceBaseInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspModifyDeviceBaseInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspModifyDeviceVideoInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspModifyDeviceVideoInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspModifyDeviceVideoInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspModifyDeviceVideoInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspModifyDeviceVideoInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspModifyDeviceRecordInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspModifyDeviceRecordInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspModifyDeviceRecordInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspModifyDeviceRecordInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspModifyDeviceRecordInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspPullStreamToCloudMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspPullStreamToCloudMsg() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspPullStreamToCloudMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspPullStreamToCloudMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspPullStreamToCloudMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspPullStreamToCloudMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspPullStreamToCosMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspPullStreamToCosMsg() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspPullStreamToCosMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspPullStreamToCosMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspPullStreamToCosMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspPullStreamToCosMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspGetVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspGetVersionInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspGetVersionInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspGetVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspGetVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspGetVersionInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IvcpRspUpdateVersionInfoMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IvcpRspUpdateVersionInfoMsg() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ivc::RpcReqData, ::ivc::RpcResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ivc::RpcReqData, ::ivc::RpcResData>* streamer) {
                       return this->StreamedIvcpRspUpdateVersionInfoMsg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IvcpRspUpdateVersionInfoMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* /*context*/, const ::ivc::RpcReqData* /*request*/, ::ivc::RpcResData* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIvcpRspUpdateVersionInfoMsg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ivc::RpcReqData,::ivc::RpcResData>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_IvcpGetSvrIpMsg<WithStreamedUnaryMethod_IvcpRegisterMsg<WithStreamedUnaryMethod_IvcpUnRegisterMsg<WithStreamedUnaryMethod_IvcpKeepAliveMsg<WithStreamedUnaryMethod_IvcpGetNewSecMsg<WithStreamedUnaryMethod_IvcpUploadImageMedaDataMsg<WithStreamedUnaryMethod_IvcpUploadVideoSliceMetaDataMsg<WithStreamedUnaryMethod_IvcpReportNatInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceBaseInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceChannelInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceVideoInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceRecordInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceBaseInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceVideoInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceRecordInfoMsg<WithStreamedUnaryMethod_IvcpRspPullStreamToCloudMsg<WithStreamedUnaryMethod_IvcpRspPullStreamToCosMsg<WithStreamedUnaryMethod_IvcpRspGetVersionInfoMsg<WithStreamedUnaryMethod_IvcpRspUpdateVersionInfoMsg<Service > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_IvcpPollingMsg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_IvcpPollingMsg() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::ivc::StreamReqData, ::ivc::StreamResData>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::ivc::StreamReqData, ::ivc::StreamResData>* streamer) {
                       return this->StreamedIvcpPollingMsg(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_IvcpPollingMsg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IvcpPollingMsg(::grpc::ServerContext* /*context*/, const ::ivc::StreamReqData* /*request*/, ::grpc::ServerWriter< ::ivc::StreamResData>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedIvcpPollingMsg(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::ivc::StreamReqData,::ivc::StreamResData>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_IvcpPollingMsg<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_IvcpGetSvrIpMsg<WithStreamedUnaryMethod_IvcpRegisterMsg<WithStreamedUnaryMethod_IvcpUnRegisterMsg<WithStreamedUnaryMethod_IvcpKeepAliveMsg<WithStreamedUnaryMethod_IvcpGetNewSecMsg<WithStreamedUnaryMethod_IvcpUploadImageMedaDataMsg<WithStreamedUnaryMethod_IvcpUploadVideoSliceMetaDataMsg<WithStreamedUnaryMethod_IvcpReportNatInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceBaseInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceChannelInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceVideoInfoMsg<WithStreamedUnaryMethod_IvcpRspDeviceRecordInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceBaseInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceVideoInfoMsg<WithStreamedUnaryMethod_IvcpRspModifyDeviceRecordInfoMsg<WithStreamedUnaryMethod_IvcpRspPullStreamToCloudMsg<WithStreamedUnaryMethod_IvcpRspPullStreamToCosMsg<WithStreamedUnaryMethod_IvcpRspGetVersionInfoMsg<WithStreamedUnaryMethod_IvcpRspUpdateVersionInfoMsg<WithSplitStreamingMethod_IvcpPollingMsg<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};
// *****************************设备主动******************************

}  // namespace ivc


#endif  // GRPC_ivcp_2eproto__INCLUDED
